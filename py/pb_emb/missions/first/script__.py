import glm
import sbs
import json
import http.server
from urllib.request import urlopen
from urllib.parse import urlparse
from urllib.parse import parse_qs


class MyHttpRequestHandler(http.server.SimpleHTTPRequestHandler):
    def do_GET(self):
        if self.path.endswith('favicon.ico'):
            return
        # Sending an '200 OK' response
        self.send_response(200)

        # Setting the header
        self.send_header("Content-type", "text/html")

        # Whenever using 'send_header', you also have to call 'end_headers'
        self.end_headers()

        # Extract query param
        name = 'World'
        query_components = parse_qs(urlparse(self.path).query)
        if 'name' in query_components:
            name = query_components["name"][0]

        # Some custom HTML code, possibly generated by another function
        html = f"<html><head></head><body><h1>Yello {name}!</h1></body></html>"

        # Writing the HTML contents with UTF-8
        self.wfile.write(bytes(html, "utf8"))

        return

class Myserver:
    def __init__(self):
        # Create an object of the above class
        handler_object = MyHttpRequestHandler

        PORT = 8000
        self.server = http.server.HTTPServer(("", PORT), handler_object)
        print('server started on thread')
        # Star the serverpython thread
        
    
#http_thread()

myserver = Myserver()

def  HandleScriptStart(sim):
    global player
    # x = threading.Thread(target=server.http_thread)
    # x.start()
    # data = {"text": "Hello world github/linguistâ„–1 **cool**, and #1!"}
    # response = urlopen("https://api.github.com/markdown", json.dumps(data).encode())
    # print(response.read().decode())

    
    print('started')



def HandleScriptTick(sim):
    # global player
    # global myserver
    # myserver.server.handle_request()
    
    print("Script tick ")
    # art = sim.get_space_object(player)
    # art.move(glm.vec3(20,30,40))
    # print("Artemis is at X: %d Y: %d Z: %d" % (art.pos.x, art.pos.y, art.pos.z))
